前端MVC:
数据模型层：
model---> 我们所需要用到的一切数据以及数据的处理模块
view ---> 控制用户交互页面，即用户的页面展示，专门处理页面视图
controller ---> 用来对模型和视图进行控制的模块，在这个模块完成数据和页面两者之间的处理

在数据模型层，根据数据的特点，对数据进行分离，只进行数据的操作处理。而表现层只负责页面表现的处理操作。
控制层则只参与控制数据和视图的联系。

高内聚：确定模块要完成的功能点，除了完成本职功能点外，不提供其他功能，满足可读性，可扩展性，可复用，可维护性要求
低耦合：模块间的依赖，感知，连接尽量低，各个模块尽量独立，模块间的依赖尽量通过接口，对象组合优于继承

项目分析：
首先从整体框架搭建入手，模块包含登陆模块和页面展示模块。
页面展示模块：侧边栏，tab两个主模块。侧边栏抛出接口控制tab的展示和高亮。 tab抛出接口控制侧边栏的高亮

tab模块：分为功能按钮，table两个模块。
功能按钮抛出唯一接口与table交互。
table分为列表显示和列表分页模块，分页模块抛出唯一接口影响列表展示。

在项目过程中的MVC的应用:以tab为例，首先创建每一个tab的数据模型【搜索表单模块的搜索条件，表格--》[列表数据]，
[分页所需的total,当前显示页，和每页显示条数]】页面展示层：【通过方法获取搜索条件，获取列表操作变化内容】
控制层：【1、接收展示层的数据，并传递给模型层更新数据。2、接收模型层的数据，并传递给展示层进行页面展示变更】


